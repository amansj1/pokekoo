{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"D:\\\\Koomik\\\\fe_pokekoo\\\\pages\\\\testpage.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useState } from 'react';\nimport 'isomorphic-unfetch';\nimport Cookies from 'js-cookie';\n\nvar Testpage = /*#__PURE__*/function (_React$Component) {\n  _inherits(Testpage, _React$Component);\n\n  var _super = _createSuper(Testpage);\n\n  function Testpage(props) {\n    var _this;\n\n    _classCallCheck(this, Testpage);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      pokemon: [],\n      token: ''\n    };\n    return _this;\n  }\n\n  _createClass(Testpage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      console.log();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return __jsx(\"div\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 7\n        }\n      }, console.log(token), \"ss\", __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 10\n        }\n      }, \"POKEMON FOREST \", __jsx(\"button\", {\n        onClick: componentDidMount,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 29\n        }\n      }, \" reload \"), \" \"), __jsx(\"ul\", {\n        className: \"list\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 9\n        }\n      }, pokemon.map(function (pokemon) {\n        return __jsx(\"li\", {\n          key: pokemon.name,\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }\n        }, __jsx(\"span\", {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 17\n          }\n        }, pokemon.sprites.front_default, \" \"));\n      })));\n    }\n  }]);\n\n  return Testpage;\n}(React.Component); // const Testpage = ({pokemon = [], token ,count}) =>(\n//     <div>\n//        {console.log(token)}\n//       ss<h2>POKEMON FOREST <button onClick={componentDidMount}> reload </button> </h2>\n//         <ul className=\"list\">\n//           {pokemon.map(pokemon => {\n//             return (\n//               <li key={pokemon.name} >\n//                 <span>{pokemon.sprites.front_default} </span>\n//               </li>\n//             )\n//           })}\n//         </ul>\n//     </div>\n// )\n// function componentDidMount () {\n//   fetchData();\n// }\n// export function getPokemon({ url }) {\n//   return new Promise((resolve, reject) => {\n//       fetch(url).then(res => res.json())\n//           .then(data => {\n//               resolve(data)\n//           })\n//   });\n// }\n// Testpage.getInitialProps = fetchData;\n// async function fetchData() {\n//   const rand = Math.round(Math.random() * (964 - 1) + 1);\n//   const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset='+rand+'&limit=30';\n//   const fetchRes = await fetch(initialURL)\n//   const res = await fetchRes.json()\n//   const data = res.results\n//   const count = res.count \n//   const token = Cookies.get('token')\n//   let pokemonData = await Promise.all(data.map(async pokemon => {\n//     let pokemonRecord = await getPokemon(pokemon)\n//     return pokemonRecord\n//   }))\n//   console.log(pokemonData)\n//   return {\n//     pokemon: pokemonData,\n//     count, token\n//   }\n// }\n\n\nexport default Testpage;","map":{"version":3,"sources":["D:/Koomik/fe_pokekoo/pages/testpage.jsx"],"names":["React","useState","Cookies","Testpage","props","state","pokemon","token","console","log","componentDidMount","map","name","sprites","front_default","Component"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAkC,OAAlC;AACA,OAAQ,oBAAR;AACA,OAAOC,OAAP,MAAoB,WAApB;;IAKMC,Q;;;;;AACJ,oBAAYC,KAAZ,EAAkB;AAAA;;AAAA;;AAChB,8BAAMA,KAAN;AACA,UAAKC,KAAL,GAAW;AACPC,MAAAA,OAAO,EAAC,EADD;AAEPC,MAAAA,KAAK,EAAC;AAFC,KAAX;AAFgB;AAQnB;;;;wCAEkB;AACjBC,MAAAA,OAAO,CAACC,GAAR;AACD;;;6BAGS;AAAA;;AACN,aACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACAD,OAAO,CAACC,GAAR,CAAYF,KAAZ,CADA,QAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAmB;AAAQ,QAAA,OAAO,EAAEG,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAAnB,MAFH,EAGE;AAAI,QAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,OAAO,CAACK,GAAR,CAAY,UAAAL,OAAO,EAAI;AAEtB,eACE;AAAI,UAAA,GAAG,EAAEA,OAAO,CAACM,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAON,OAAO,CAACO,OAAR,CAAgBC,aAAvB,MADF,CADF;AAMD,OARA,CADH,CAHF,CADF;AAiBD;;;;EAlCoBd,KAAK,CAACe,S,GAuC7B;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAKA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AAGA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEE,eAAeZ,QAAf","sourcesContent":["import React , { useState }  from 'react'\r\nimport  'isomorphic-unfetch'\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n\r\n\r\nclass Testpage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n        pokemon:[],\r\n        token:''\r\n       \r\n    }\r\n\r\n}\r\n\r\ncomponentDidMount(){\r\n  console.log()\r\n}\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n     {console.log(token)}\r\n       ss<h2>POKEMON FOREST <button onClick={componentDidMount}> reload </button> </h2>\r\n        <ul className=\"list\">\r\n          {pokemon.map(pokemon => {\r\n           \r\n            return (\r\n              <li key={pokemon.name} >\r\n                <span>{pokemon.sprites.front_default} </span>\r\n                \r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n// const Testpage = ({pokemon = [], token ,count}) =>(\r\n\r\n \r\n//     <div>\r\n//        {console.log(token)}\r\n//       ss<h2>POKEMON FOREST <button onClick={componentDidMount}> reload </button> </h2>\r\n//         <ul className=\"list\">\r\n//           {pokemon.map(pokemon => {\r\n           \r\n//             return (\r\n//               <li key={pokemon.name} >\r\n//                 <span>{pokemon.sprites.front_default} </span>\r\n                \r\n//               </li>\r\n//             )\r\n//           })}\r\n//         </ul>\r\n//     </div>\r\n// )\r\n\r\n\r\n\r\n// function componentDidMount () {\r\n  \r\n//   fetchData();\r\n// }\r\n  \r\n// export function getPokemon({ url }) {\r\n//   return new Promise((resolve, reject) => {\r\n//       fetch(url).then(res => res.json())\r\n//           .then(data => {\r\n//               resolve(data)\r\n//           })\r\n//   });\r\n// }\r\n\r\n\r\n\r\n\r\n// Testpage.getInitialProps = fetchData;\r\n\r\n// async function fetchData() {\r\n  \r\n//   const rand = Math.round(Math.random() * (964 - 1) + 1);\r\n//   const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset='+rand+'&limit=30';\r\n  \r\n//   const fetchRes = await fetch(initialURL)\r\n//   const res = await fetchRes.json()\r\n  \r\n//   const data = res.results\r\n//   const count = res.count \r\n \r\n//   const token = Cookies.get('token')\r\n \r\n\r\n//   let pokemonData = await Promise.all(data.map(async pokemon => {\r\n//     let pokemonRecord = await getPokemon(pokemon)\r\n//     return pokemonRecord\r\n//   }))\r\n \r\n//   console.log(pokemonData)\r\n//   return {\r\n//     pokemon: pokemonData,\r\n//     count, token\r\n//   }\r\n// }\r\n\r\n  export default Testpage"]},"metadata":{},"sourceType":"module"}