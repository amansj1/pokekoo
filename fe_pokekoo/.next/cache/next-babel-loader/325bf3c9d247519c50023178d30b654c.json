{"ast":null,"code":"var _jsxFileName = \"D:\\\\Koomik\\\\fe_pokekoo\\\\pages\\\\testpage.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport 'isomorphic-unfetch';\nimport Cookies from 'js-cookie';\n\nclass Testpage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemon: [],\n      token: ''\n    };\n  }\n\n  componentDidMount() {\n    async function fetchData() {\n      const rand = Math.round(Math.random() * (964 - 1) + 1);\n      const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset=' + rand + '&limit=30';\n      const fetchRes = await fetch(initialURL);\n      const res = await fetchRes.json();\n      const data = res.results;\n      const count = res.count;\n      const token = Cookies.get('token');\n      let pokemonData = await Promise.all(data.map(async pokemon => {\n        let pokemonRecord = await getPokemon(pokemon);\n        return pokemonRecord;\n      }));\n      console.log(pokemonData);\n      return {\n        pokemon: pokemonData,\n        count,\n        token\n      };\n      fetchData();\n    }\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    });\n  }\n\n} // const Testpage = ({pokemon = [], token ,count}) =>(\n//     <div>\n//        {console.log(token)}\n//       ss<h2>POKEMON FOREST <button onClick={componentDidMount}> reload </button> </h2>\n//         <ul className=\"list\">\n//           {pokemon.map(pokemon => {\n//             return (\n//               <li key={pokemon.name} >\n//                 <span>{pokemon.sprites.front_default} </span>\n//               </li>\n//             )\n//           })}\n//         </ul>\n//     </div>\n// )\n// function componentDidMount () {\n//   fetchData();\n// }\n// export function getPokemon({ url }) {\n//   return new Promise((resolve, reject) => {\n//       fetch(url).then(res => res.json())\n//           .then(data => {\n//               resolve(data)\n//           })\n//   });\n// }\n\n\nTestpage.getInitialProps = fetchData;\nexport default Testpage;","map":{"version":3,"sources":["D:/Koomik/fe_pokekoo/pages/testpage.jsx"],"names":["React","useState","Cookies","Testpage","Component","constructor","props","state","pokemon","token","componentDidMount","fetchData","rand","Math","round","random","initialURL","fetchRes","fetch","res","json","data","results","count","get","pokemonData","Promise","all","map","pokemonRecord","getPokemon","console","log","render","getInitialProps"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAkC,OAAlC;AACA,OAAQ,oBAAR;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAKA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,OAAO,EAAC,EADD;AAEPC,MAAAA,KAAK,EAAC;AAFC,KAAX;AAMH;;AAIDC,EAAAA,iBAAiB,GAAE;AACjB,mBAAeC,SAAf,GAA2B;AAEzB,YAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,MAAM,CAAvB,IAA4B,CAAvC,CAAb;AACA,YAAMC,UAAU,GAAG,8CAA4CJ,IAA5C,GAAiD,WAApE;AAEA,YAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACF,UAAD,CAA5B;AACA,YAAMG,GAAG,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAlB;AAEA,YAAMC,IAAI,GAAGF,GAAG,CAACG,OAAjB;AACA,YAAMC,KAAK,GAAGJ,GAAG,CAACI,KAAlB;AAEA,YAAMd,KAAK,GAAGP,OAAO,CAACsB,GAAR,CAAY,OAAZ,CAAd;AAGA,UAAIC,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYN,IAAI,CAACO,GAAL,CAAS,MAAMpB,OAAN,IAAiB;AAC5D,YAAIqB,aAAa,GAAG,MAAMC,UAAU,CAACtB,OAAD,CAApC;AACA,eAAOqB,aAAP;AACD,OAHmC,CAAZ,CAAxB;AAKAE,MAAAA,OAAO,CAACC,GAAR,CAAYP,WAAZ;AACA,aAAO;AACLjB,QAAAA,OAAO,EAAEiB,WADJ;AAELF,QAAAA,KAFK;AAEEd,QAAAA;AAFF,OAAP;AAIAE,MAAAA,SAAS;AACV;AAEF;;AAGCsB,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAiBD;;AA9DmC,C,CAmEtC;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAKA9B,QAAQ,CAAC+B,eAAT,GAA2BvB,SAA3B;AAIE,eAAeR,QAAf","sourcesContent":["import React , { useState }  from 'react'\r\nimport  'isomorphic-unfetch'\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n\r\n\r\nclass Testpage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n        pokemon:[],\r\n        token:''\r\n       \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\ncomponentDidMount(){\r\n  async function fetchData() {\r\n  \r\n    const rand = Math.round(Math.random() * (964 - 1) + 1);\r\n    const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset='+rand+'&limit=30';\r\n    \r\n    const fetchRes = await fetch(initialURL)\r\n    const res = await fetchRes.json()\r\n    \r\n    const data = res.results\r\n    const count = res.count \r\n   \r\n    const token = Cookies.get('token')\r\n   \r\n  \r\n    let pokemonData = await Promise.all(data.map(async pokemon => {\r\n      let pokemonRecord = await getPokemon(pokemon)\r\n      return pokemonRecord\r\n    }))\r\n   \r\n    console.log(pokemonData)\r\n    return {\r\n      pokemon: pokemonData,\r\n      count, token\r\n    }\r\n    fetchData();\r\n  }\r\n  \r\n}\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n     {/* {console.log(token)}\r\n       ss<h2>POKEMON FOREST <button onClick={componentDidMount}> reload </button> </h2>\r\n        <ul className=\"list\">\r\n          {pokemon.map(pokemon => {\r\n           \r\n            return (\r\n              <li key={pokemon.name} >\r\n                <span>{pokemon.sprites.front_default} </span>\r\n                \r\n              </li>\r\n            )\r\n          })}\r\n        </ul> */}\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n// const Testpage = ({pokemon = [], token ,count}) =>(\r\n\r\n \r\n//     <div>\r\n//        {console.log(token)}\r\n//       ss<h2>POKEMON FOREST <button onClick={componentDidMount}> reload </button> </h2>\r\n//         <ul className=\"list\">\r\n//           {pokemon.map(pokemon => {\r\n           \r\n//             return (\r\n//               <li key={pokemon.name} >\r\n//                 <span>{pokemon.sprites.front_default} </span>\r\n                \r\n//               </li>\r\n//             )\r\n//           })}\r\n//         </ul>\r\n//     </div>\r\n// )\r\n\r\n\r\n\r\n// function componentDidMount () {\r\n  \r\n//   fetchData();\r\n// }\r\n  \r\n// export function getPokemon({ url }) {\r\n//   return new Promise((resolve, reject) => {\r\n//       fetch(url).then(res => res.json())\r\n//           .then(data => {\r\n//               resolve(data)\r\n//           })\r\n//   });\r\n// }\r\n\r\n\r\n\r\n\r\nTestpage.getInitialProps = fetchData;\r\n\r\n\r\n\r\n  export default Testpage"]},"metadata":{},"sourceType":"module"}