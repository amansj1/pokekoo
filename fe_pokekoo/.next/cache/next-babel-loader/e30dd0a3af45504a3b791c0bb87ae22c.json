{"ast":null,"code":"var _jsxFileName = \"D:\\\\Koomik\\\\fe_pokekoo\\\\pages\\\\testpage.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport 'isomorphic-unfetch';\nimport Cookies from 'js-cookie';\n\nconst Testpage = ({\n  pokemon = [],\n  token,\n  count\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 5\n  }\n}, console.log(token), \"ss\", __jsx(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 9\n  }\n}, \"POKEMON FOREST \", __jsx(\"button\", {\n  onClick: componentDidMount,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 28\n  }\n}, \" reload \"), \" \"), __jsx(\"ul\", {\n  className: \"list\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 9\n  }\n}, pokemon.map(pokemon => {\n  return __jsx(\"li\", {\n    key: pokemon.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 17\n    }\n  }, pokemon.sprites.front_default, \" \"));\n})));\n\nasync function click() {\n  console.log('click');\n  fetchData(); // return { pokemon };\n}\n\nfunction componentDidMount() {\n  fetchData();\n}\n\nexport function getPokemon({\n  url\n}) {\n  return new Promise((resolve, reject) => {\n    fetch(url).then(res => res.json()).then(data => {\n      resolve(data);\n    });\n  });\n}\nTestpage.getInitialProps = fetchData;\n\nasync function fetchData() {\n  const rand = Math.round(Math.random() * (964 - 1) + 1);\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset=' + rand + '&limit=30';\n  const fetchRes = await fetch(initialURL);\n  const res = await fetchRes.json();\n  const data = res.results;\n  const count = res.count;\n  const token = Cookies.get('token');\n  let pokemonData = await Promise.all(data.map(async pokemon => {\n    let pokemonRecord = await getPokemon(pokemon);\n    return pokemonRecord;\n  }));\n  return {\n    pokemon: pokemonData,\n    count,\n    token\n  };\n}\n\nexport default Testpage;","map":{"version":3,"sources":["D:/Koomik/fe_pokekoo/pages/testpage.jsx"],"names":["React","Cookies","Testpage","pokemon","token","count","console","log","componentDidMount","map","name","sprites","front_default","click","fetchData","getPokemon","url","Promise","resolve","reject","fetch","then","res","json","data","getInitialProps","rand","Math","round","random","initialURL","fetchRes","results","get","pokemonData","all","pokemonRecord"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAQ,oBAAR;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAIA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,OAAO,GAAG,EAAX;AAAeC,EAAAA,KAAf;AAAsBC,EAAAA;AAAtB,CAAD,KAGb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACIC,OAAO,CAACC,GAAR,CAAYH,KAAZ,CADJ,QAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAAmB;AAAQ,EAAA,OAAO,EAAEI,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAnB,MAFJ,EAGI;AAAI,EAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGL,OAAO,CAACM,GAAR,CAAYN,OAAO,IAAI;AAEtB,SACE;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACO,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOP,OAAO,CAACQ,OAAR,CAAgBC,aAAvB,MADF,CADF;AAMD,CARA,CADH,CAHJ,CAHJ;;AAoBA,eAAeC,KAAf,GAAuB;AACrBP,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAO,EAAAA,SAAS,GAFY,CAGrB;AACD;;AAED,SAASN,iBAAT,GAA8B;AAE5BM,EAAAA,SAAS;AACV;;AAED,OAAO,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA6B;AAClC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,IAAAA,KAAK,CAACJ,GAAD,CAAL,CAAWK,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvB,EACKF,IADL,CACUG,IAAI,IAAI;AACVN,MAAAA,OAAO,CAACM,IAAD,CAAP;AACH,KAHL;AAIH,GALM,CAAP;AAMD;AAKDtB,QAAQ,CAACuB,eAAT,GAA2BX,SAA3B;;AAEA,eAAeA,SAAf,GAA2B;AAEzB,QAAMY,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,MAAM,CAAvB,IAA4B,CAAvC,CAAb;AACA,QAAMC,UAAU,GAAG,8CAA4CJ,IAA5C,GAAiD,WAApE;AAEA,QAAMK,QAAQ,GAAG,MAAMX,KAAK,CAACU,UAAD,CAA5B;AACA,QAAMR,GAAG,GAAG,MAAMS,QAAQ,CAACR,IAAT,EAAlB;AAEA,QAAMC,IAAI,GAAGF,GAAG,CAACU,OAAjB;AACA,QAAM3B,KAAK,GAAGiB,GAAG,CAACjB,KAAlB;AAEA,QAAMD,KAAK,GAAGH,OAAO,CAACgC,GAAR,CAAY,OAAZ,CAAd;AAGA,MAAIC,WAAW,GAAG,MAAMjB,OAAO,CAACkB,GAAR,CAAYX,IAAI,CAACf,GAAL,CAAS,MAAMN,OAAN,IAAiB;AAC5D,QAAIiC,aAAa,GAAG,MAAMrB,UAAU,CAACZ,OAAD,CAApC;AACA,WAAOiC,aAAP;AACD,GAHmC,CAAZ,CAAxB;AAKA,SAAO;AACLjC,IAAAA,OAAO,EAAE+B,WADJ;AAEL7B,IAAAA,KAFK;AAEED,IAAAA;AAFF,GAAP;AAID;;AAEC,eAAeF,QAAf","sourcesContent":["import React from 'react'\r\nimport  'isomorphic-unfetch'\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n\r\nconst Testpage = ({pokemon = [], token ,count}) =>(\r\n\r\n \r\n    <div>\r\n       {console.log(token)}\r\n      ss<h2>POKEMON FOREST <button onClick={componentDidMount}> reload </button> </h2>\r\n        <ul className=\"list\">\r\n          {pokemon.map(pokemon => {\r\n           \r\n            return (\r\n              <li key={pokemon.name} >\r\n                <span>{pokemon.sprites.front_default} </span>\r\n                \r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nasync function click() {\r\n  console.log('click')\r\n  fetchData()\r\n  // return { pokemon };\r\n}\r\n\r\nfunction componentDidMount () {\r\n  \r\n  fetchData();\r\n}\r\n  \r\nexport function getPokemon({ url }) {\r\n  return new Promise((resolve, reject) => {\r\n      fetch(url).then(res => res.json())\r\n          .then(data => {\r\n              resolve(data)\r\n          })\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\nTestpage.getInitialProps = fetchData;\r\n\r\nasync function fetchData() {\r\n  \r\n  const rand = Math.round(Math.random() * (964 - 1) + 1);\r\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset='+rand+'&limit=30';\r\n  \r\n  const fetchRes = await fetch(initialURL)\r\n  const res = await fetchRes.json()\r\n  \r\n  const data = res.results\r\n  const count = res.count \r\n\r\n  const token = Cookies.get('token')\r\n \r\n\r\n  let pokemonData = await Promise.all(data.map(async pokemon => {\r\n    let pokemonRecord = await getPokemon(pokemon)\r\n    return pokemonRecord\r\n  }))\r\n \r\n  return {\r\n    pokemon: pokemonData,\r\n    count, token\r\n  }\r\n}\r\n\r\n  export default Testpage"]},"metadata":{},"sourceType":"module"}