{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Koomik\\\\fe_pokekoo\\\\pages\\\\testpage.jsx\";\n\nvar __jsx = React.createElement;\nimport React from 'react';\nimport 'isomorphic-unfetch';\nimport { getId } from '../service/pokemon';\n\nvar Testpage = function Testpage(_ref) {\n  var _ref$pokemon = _ref.pokemon,\n      pokemon = _ref$pokemon === void 0 ? [] : _ref$pokemon,\n      count = _ref.count;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 5\n    }\n  }, \"ss\", __jsx(\"ul\", {\n    className: \"list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }, pokemon.map(function (pokemon) {\n    return __jsx(\"li\", {\n      key: pokemon.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 17\n      }\n    }, pokemon.order, \" \"));\n  })));\n};\n\n_c = Testpage;\n\nTestpage.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n    var req, rand, initialURL, fetchRes, res, data, count, _pokemonData;\n\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            req = _ref2.req;\n            rand = Math.round(Math.random() * (964 - 1) + 1);\n            initialURL = 'https://pokeapi.co/api/v2/pokemon?offset=' + rand + '&limit=30';\n            _context2.next = 5;\n            return fetch(initialURL);\n\n          case 5:\n            fetchRes = _context2.sent;\n            _context2.next = 8;\n            return fetchRes.json();\n\n          case 8:\n            res = _context2.sent;\n            data = res.results;\n            count = res.count;\n            _context2.next = 13;\n            return Promise.all(data.map( /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(pokemon) {\n                var pokemonRecord;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return getPokemon(pokemon);\n\n                      case 2:\n                        pokemonRecord = _context.sent;\n                        return _context.abrupt(\"return\", pokemonRecord);\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x2) {\n                return _ref4.apply(this, arguments);\n              };\n            }()));\n\n          case 13:\n            _pokemonData = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              pokemon: _pokemonData,\n              count: count\n            });\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport function getPokemon(_ref5) {\n  var url = _ref5.url;\n  return new Promise(function (resolve, reject) {\n    fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      resolve(data);\n    });\n  });\n}\nexport default Testpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Testpage\");","map":{"version":3,"sources":["D:/Koomik/fe_pokekoo/pages/testpage.jsx"],"names":["React","getId","Testpage","pokemon","count","map","name","order","getInitialProps","req","rand","Math","round","random","initialURL","fetch","fetchRes","json","res","data","results","Promise","all","getPokemon","pokemonRecord","_pokemonData","url","resolve","reject","then"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAQ,oBAAR;AACA,SAAQC,KAAR,QAAoB,oBAApB;;AAGA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,0BAAEC,OAAF;AAAA,MAAEA,OAAF,6BAAY,EAAZ;AAAA,MAAgBC,KAAhB,QAAgBA,KAAhB;AAAA,SACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAEI;AAAI,IAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,OAAO,CAACE,GAAR,CAAY,UAAAF,OAAO,EAAI;AAEtB,WACE;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACG,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAOH,OAAO,CAACI,KAAf,MADF,CADF;AAMD,GARA,CADH,CAFJ,CADa;AAAA,CAAjB;;KAAML,Q;;AAiBNA,QAAQ,CAACM,eAAT;AAAA,uEAA2B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAASC,YAAAA,GAAT,SAASA,GAAT;AACnBC,YAAAA,IADmB,GACZC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,MAAM,CAAvB,IAA4B,CAAvC,CADY;AAEnBC,YAAAA,UAFmB,GAEN,8CAA4CJ,IAA5C,GAAiD,WAF3C;AAAA;AAAA,mBAIFK,KAAK,CAACD,UAAD,CAJH;;AAAA;AAInBE,YAAAA,QAJmB;AAAA;AAAA,mBAKPA,QAAQ,CAACC,IAAT,EALO;;AAAA;AAKnBC,YAAAA,GALmB;AAOnBC,YAAAA,IAPmB,GAOZD,GAAG,CAACE,OAPQ;AAQnBhB,YAAAA,KARmB,GAQXc,GAAG,CAACd,KARO;AAAA;AAAA,mBAWAiB,OAAO,CAACC,GAAR,CAAYH,IAAI,CAACd,GAAL;AAAA,mFAAS,iBAAMF,OAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAClBoB,UAAU,CAACpB,OAAD,CADQ;;AAAA;AACxCqB,wBAAAA,aADwC;AAAA,yDAErCA,aAFqC;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAT;;AAAA;AAAA;AAAA;AAAA,gBAAZ,CAXA;;AAAA;AAWrBC,YAAAA,YAXqB;AAAA,8CAgBlB;AACLtB,cAAAA,OAAO,EAAEsB,YADJ;AAELrB,cAAAA,KAAK,EAALA;AAFK,aAhBkB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAA3B;;AAAA;AAAA;AAAA;AAAA;;AAuBE,OAAO,SAASmB,UAAT,QAA6B;AAAA,MAAPG,GAAO,SAAPA,GAAO;AAClC,SAAO,IAAIL,OAAJ,CAAY,UAACM,OAAD,EAAUC,MAAV,EAAqB;AACpCb,IAAAA,KAAK,CAACW,GAAD,CAAL,CAAWG,IAAX,CAAgB,UAAAX,GAAG;AAAA,aAAIA,GAAG,CAACD,IAAJ,EAAJ;AAAA,KAAnB,EACKY,IADL,CACU,UAAAV,IAAI,EAAI;AACVQ,MAAAA,OAAO,CAACR,IAAD,CAAP;AACH,KAHL;AAIH,GALM,CAAP;AAMH;AAEC,eAAejB,QAAf","sourcesContent":["import React from 'react'\r\nimport  'isomorphic-unfetch'\r\nimport {getId} from '../service/pokemon'\r\n\r\n\r\nconst Testpage = ({pokemon = [], count}) =>(\r\n    <div>\r\n      ss\r\n        <ul className=\"list\">\r\n          {pokemon.map(pokemon => {\r\n           \r\n            return (\r\n              <li key={pokemon.name} >\r\n                <span>{pokemon.order} </span>\r\n                \r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nTestpage.getInitialProps = async ({ req }) => {\r\n  const rand = Math.round(Math.random() * (964 - 1) + 1);\r\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset='+rand+'&limit=30';\r\n  \r\n  const fetchRes = await fetch(initialURL)\r\n  const res = await fetchRes.json()\r\n\r\n  const data = res.results\r\n  const count = res.count \r\n\r\n\r\n  let _pokemonData = await Promise.all(data.map(async pokemon => {\r\n    let pokemonRecord = await getPokemon(pokemon)\r\n    return pokemonRecord\r\n  }))\r\n \r\n  return {\r\n    pokemon: _pokemonData,\r\n    count,\r\n  }}\r\n\r\n\r\n\r\n  export function getPokemon({ url }) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}\r\n\r\n  export default Testpage"]},"metadata":{},"sourceType":"module"}