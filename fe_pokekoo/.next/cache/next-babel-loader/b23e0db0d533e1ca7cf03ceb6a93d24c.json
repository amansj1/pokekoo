{"ast":null,"code":"import Router from 'next/router';\nimport axios from 'axios';\nimport { AUTHENTICATE, DEAUTHENTICATE, USER } from '../types';\nimport { API } from '../../config';\nimport { setCookie, removeCookie } from '../../utils/cookie';\n\nconst register = ({\n  name,\n  email,\n  password\n}, type) => {\n  if (type !== 'register') {\n    throw new Error('salah');\n  }\n\n  return dispatch => {\n    axios.post(`http://127.0.0.1:8000/api/auth/register`, {\n      name,\n      email,\n      password\n    }).then(response => {\n      Router.push('/');\n      console.log(response.data.meta.message);\n    }).catch(err => {\n      switch (error.response.status) {\n        case 422:\n          alert(error.response.data.meta.message);\n          break;\n\n        case 401:\n          alert(error.response.data.meta.message);\n          break;\n\n        case 500:\n          alert('Interval server error! Try again!');\n          break;\n\n        default:\n          alert(error.response.data.meta.message);\n          break;\n      }\n    });\n  };\n}; // ambil token dari api masukin ke cookie\n\n\nconst authenticate = ({\n  email_id,\n  password\n}, type) => {\n  if (type !== 'login') {\n    throw new Error('Wrong API call!');\n  }\n\n  return dispatch => {\n    console.log(email_id);\n    axios.post(`${API}/${type}`, {\n      email_id,\n      password\n    }).then(response => {\n      console.log(response.data.data.user.token);\n      setCookie('token', response.data.data.user.token);\n      Router.push('/users');\n      dispatch({\n        type: AUTHENTICATE,\n        payload: response.data.data.user.token\n      });\n    }).catch(err => {\n      console.log(err);\n\n      switch (error.response.status) {\n        case 422:\n          alert(error.response.data.meta.message);\n          break;\n\n        case 401:\n          alert(error.response.data.meta.message);\n          break;\n\n        case 500:\n          alert('Interval server error! Try again!');\n          break;\n\n        default:\n          alert(error.response.data.meta.message);\n          break;\n      }\n    });\n  };\n}; // ambil token dr cookie\n\n\nconst reauthenticate = token => {\n  return dispatch => {\n    dispatch({\n      type: AUTHENTICATE,\n      payload: token\n    });\n  };\n}; // hapus token\n\n\nconst deauthenticate = () => {\n  return dispatch => {\n    removeCookie('token');\n    Router.push('/');\n    dispatch({\n      type: DEAUTHENTICATE\n    });\n  };\n};\n\nconst getUser = ({\n  token\n}, type) => {\n  console.log(token);\n  return dispatch => {\n    axios.get(`${API}/${type}`, {\n      headers: {\n        \"Authorization\": \"bearer \" + token\n      }\n    }).then(response => {\n      dispatch({\n        type: USER,\n        payload: response.data.data.user\n      });\n    }).catch(error => {\n      switch (error.response.status) {\n        case 401:\n          Router.push('/');\n          break;\n\n        case 422:\n          alert(error.response.data.meta.message);\n          break;\n\n        case 500:\n          alert('server error');\n\n        case 503:\n          alert(error.response.data.meta.message);\n          Router.push('/');\n          break;\n\n        default:\n          alert(error.response.data.meta.message);\n          break;\n      }\n    });\n  };\n};\n\nexport default {\n  register,\n  authenticate,\n  reauthenticate,\n  deauthenticate,\n  getUser\n};","map":{"version":3,"sources":["D:/Koomik/fe_pokekoo/redux/actions/authact.jsx"],"names":["Router","axios","AUTHENTICATE","DEAUTHENTICATE","USER","API","setCookie","removeCookie","register","name","email","password","type","Error","dispatch","post","then","response","push","console","log","data","meta","message","catch","err","error","status","alert","authenticate","email_id","user","token","payload","reauthenticate","deauthenticate","getUser","get","headers"],"mappings":"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","sourcesContent":["import Router from 'next/router';\r\nimport axios from 'axios';\r\nimport { AUTHENTICATE, DEAUTHENTICATE, USER } from '../types';\r\nimport { API } from '../../config';\r\nimport { setCookie, removeCookie } from '../../utils/cookie';\r\n\r\n\r\nconst register = ({ name, email, password }, type) => {\r\n  if (type !== 'register') {\r\n    throw new Error('salah');\r\n  }\r\n  return (dispatch) => {\r\n    axios.post(`http://127.0.0.1:8000/api/auth/register`, {name, email, password })\r\n      .then((response) => {\r\n        Router.push('/');\r\n        console.log(response.data.meta.message);\r\n      })\r\n      .catch((err) => {\r\n        switch (error.response.status) {\r\n          case 422:\r\n          alert(error.response.data.meta.message);\r\n            break;\r\n          case 401:\r\n          alert(error.response.data.meta.message);\r\n            break;\r\n          case 500:\r\n          alert('Interval server error! Try again!');\r\n            break;\r\n          default:\r\n          alert(error.response.data.meta.message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n};\r\n// ambil token dari api masukin ke cookie\r\nconst authenticate = ({ email_id, password }, type) => {\r\n  if (type !== 'login') {\r\n    throw new Error('Wrong API call!');\r\n  }\r\n  return (dispatch) => {\r\n    console.log(email_id)\r\n    axios.post(`${API}/${type}`, { email_id, password })\r\n      .then((response) => {\r\n        console.log(response.data.data.user.token);\r\n        setCookie('token', response.data.data.user.token);\r\n        Router.push('/users');\r\n        dispatch({type: AUTHENTICATE, payload: response.data.data.user.token});\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n        switch (error.response.status) {\r\n          case 422:\r\n          alert(error.response.data.meta.message);\r\n            break;\r\n          case 401:\r\n          alert(error.response.data.meta.message);\r\n            break;\r\n          case 500:\r\n          alert('Interval server error! Try again!');\r\n            break;\r\n          default:\r\n          alert(error.response.data.meta.message);\r\n            break;\r\n        }\r\n\r\n      });\r\n  };\r\n};\r\n\r\n// ambil token dr cookie\r\nconst reauthenticate = (token) => {\r\n  return (dispatch) => {\r\n    dispatch({type: AUTHENTICATE, payload: token});\r\n  };\r\n};\r\n\r\n// hapus token\r\nconst deauthenticate = () => {\r\n  return (dispatch) => {\r\n    removeCookie('token');\r\n    Router.push('/');\r\n    dispatch({type: DEAUTHENTICATE});\r\n  };\r\n};\r\n\r\nconst getUser = ({ token }, type) => {\r\n  console.log(token)\r\n  return (dispatch) => {\r\n    axios.get(`${API}/${type}`,{headers: {\r\n      \"Authorization\" : \"bearer \" + token\r\n    }\r\n  })\r\n      .then((response) => {\r\n        dispatch({ type: USER, payload: response.data.data.user });\r\n      })\r\n      .catch((error) => {\r\n        switch (error.response.status) {\r\n          case 401:\r\n            Router.push('/');\r\n            break;\r\n          case 422:\r\n            alert(error.response.data.meta.message);\r\n            break;\r\n          case 500:\r\n          alert('server error');\r\n          case 503:\r\n          alert(error.response.data.meta.message);\r\n          Router.push('/');\r\n            break;\r\n          default:\r\n          alert(error.response.data.meta.message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n};\r\n\r\n\r\nexport default {\r\n  register,\r\n  authenticate,\r\n  reauthenticate,\r\n  deauthenticate,\r\n  getUser,\r\n};"]},"metadata":{},"sourceType":"module"}