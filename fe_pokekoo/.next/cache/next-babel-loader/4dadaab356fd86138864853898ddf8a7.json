{"ast":null,"code":"var _jsxFileName = \"D:\\\\Koomik\\\\fe_pokekoo\\\\pages\\\\testpage.jsx\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport 'isomorphic-unfetch';\nimport { getId } from '../service/pokemon';\n\nconst Testpage = ({\n  pokemon = [],\n  count\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 7,\n    columnNumber: 5\n  }\n}, \"ss\", __jsx(\"ul\", {\n  className: \"list\",\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }\n}, pokemon.map(pokemon => {\n  return __jsx(\"li\", {\n    key: pokemon.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 15\n    }\n  }, __jsx(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 17\n    }\n  }, pokemon.sprites.front_default, \" \"));\n})));\n\nTestpage.getInitialProps = async ({\n  req\n}) => {\n  const rand = Math.round(Math.random() * (964 - 1) + 1);\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset=' + rand + '&limit=30';\n  const fetchRes = await fetch(initialURL);\n  const res = await fetchRes.json();\n  const data = res.results;\n  const count = res.count;\n  let pokemonData = await Promise.all(data.map(async pokemon => {\n    let pokemonRecord = await getPokemon(pokemon);\n    return pokemonRecord;\n  }));\n  return {\n    pokemon: pokemonData,\n    count\n  };\n};\n\nexport function getPokemon({\n  url\n}) {\n  return new Promise((resolve, reject) => {\n    fetch(url).then(res => res.json()).then(data => {\n      resolve(data);\n    });\n  });\n}\nexport default Testpage;","map":{"version":3,"sources":["D:/Koomik/fe_pokekoo/pages/testpage.jsx"],"names":["React","getId","Testpage","pokemon","count","map","name","sprites","front_default","getInitialProps","req","rand","Math","round","random","initialURL","fetchRes","fetch","res","json","data","results","pokemonData","Promise","all","pokemonRecord","getPokemon","url","resolve","reject","then"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAQ,oBAAR;AACA,SAAQC,KAAR,QAAoB,oBAApB;;AAGA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,OAAO,GAAG,EAAX;AAAeC,EAAAA;AAAf,CAAD,KACb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAEI;AAAI,EAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACGD,OAAO,CAACE,GAAR,CAAYF,OAAO,IAAI;AAEtB,SACE;AAAI,IAAA,GAAG,EAAEA,OAAO,CAACG,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOH,OAAO,CAACI,OAAR,CAAgBC,aAAvB,MADF,CADF;AAMD,CARA,CADH,CAFJ,CADJ;;AAiBAN,QAAQ,CAACO,eAAT,GAA2B,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAmB;AAC5C,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,MAAM,CAAvB,IAA4B,CAAvC,CAAb;AACA,QAAMC,UAAU,GAAG,8CAA4CJ,IAA5C,GAAiD,WAApE;AAEA,QAAMK,QAAQ,GAAG,MAAMC,KAAK,CAACF,UAAD,CAA5B;AACA,QAAMG,GAAG,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAlB;AAEA,QAAMC,IAAI,GAAGF,GAAG,CAACG,OAAjB;AACA,QAAMjB,KAAK,GAAGc,GAAG,CAACd,KAAlB;AAGA,MAAIkB,WAAW,GAAG,MAAMC,OAAO,CAACC,GAAR,CAAYJ,IAAI,CAACf,GAAL,CAAS,MAAMF,OAAN,IAAiB;AAC5D,QAAIsB,aAAa,GAAG,MAAMC,UAAU,CAACvB,OAAD,CAApC;AACA,WAAOsB,aAAP;AACD,GAHmC,CAAZ,CAAxB;AAKA,SAAO;AACLtB,IAAAA,OAAO,EAAEmB,WADJ;AAELlB,IAAAA;AAFK,GAAP;AAGE,CAnBJ;;AAuBE,OAAO,SAASsB,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA6B;AAClC,SAAO,IAAIJ,OAAJ,CAAY,CAACK,OAAD,EAAUC,MAAV,KAAqB;AACpCZ,IAAAA,KAAK,CAACU,GAAD,CAAL,CAAWG,IAAX,CAAgBZ,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvB,EACKW,IADL,CACUV,IAAI,IAAI;AACVQ,MAAAA,OAAO,CAACR,IAAD,CAAP;AACH,KAHL;AAIH,GALM,CAAP;AAMH;AAEC,eAAelB,QAAf","sourcesContent":["import React from 'react'\r\nimport  'isomorphic-unfetch'\r\nimport {getId} from '../service/pokemon'\r\n\r\n\r\nconst Testpage = ({pokemon = [], count}) =>(\r\n    <div>\r\n      ss\r\n        <ul className=\"list\">\r\n          {pokemon.map(pokemon => {\r\n           \r\n            return (\r\n              <li key={pokemon.name} >\r\n                <span>{pokemon.sprites.front_default} </span>\r\n                \r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\nTestpage.getInitialProps = async ({ req }) => {\r\n  const rand = Math.round(Math.random() * (964 - 1) + 1);\r\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset='+rand+'&limit=30';\r\n  \r\n  const fetchRes = await fetch(initialURL)\r\n  const res = await fetchRes.json()\r\n\r\n  const data = res.results\r\n  const count = res.count \r\n\r\n\r\n  let pokemonData = await Promise.all(data.map(async pokemon => {\r\n    let pokemonRecord = await getPokemon(pokemon)\r\n    return pokemonRecord\r\n  }))\r\n \r\n  return {\r\n    pokemon: pokemonData,\r\n    count,\r\n  }}\r\n\r\n\r\n\r\n  export function getPokemon({ url }) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}\r\n\r\n  export default Testpage"]},"metadata":{},"sourceType":"module"}