{"ast":null,"code":"import Router from 'next/router';\nimport axios from 'axios';\nimport { API } from '../../config';\nimport { setCookie, removeCookie } from '../../utils/cookie'; // register user\n\nconst register = ({\n  name,\n  email,\n  password\n}, type) => {\n  if (type !== 'register') {\n    throw new Error('api salah');\n  }\n\n  return dispatch => {\n    axios.post(`${API}/auth/${type}`, {\n      name,\n      email,\n      password\n    }).then(response => {\n      Router.push('/');\n      console.log(response.data.meta);\n    }).catch(err => {\n      switch (error.response.status) {\n        case 422:\n          alert(error.response.data.meta.message);\n          break;\n\n        case 401:\n          alert(error.response.data.meta.message);\n          break;\n\n        case 500:\n          alert('Interval server error! Try again!');\n          break;\n\n        default:\n          alert(error.response.data.meta.message);\n          break;\n      }\n    });\n  };\n};\n\nexport default {\n  register\n};","map":{"version":3,"sources":["D:/Koomik/fe_pokekoo/service/action.jsx"],"names":["Router","axios","API","setCookie","removeCookie","register","name","email","password","type","Error","dispatch","post","then","response","push","console","log","data","meta","catch","err","error","status","alert","message"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,GAAT,QAAoB,cAApB;AACA,SAASC,SAAT,EAAoBC,YAApB,QAAwC,oBAAxC,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,EAA2BC,IAA3B,KAAoC;AACnD,MAAIA,IAAI,KAAK,UAAb,EAAyB;AACvB,UAAM,IAAIC,KAAJ,CAAU,WAAV,CAAN;AACD;;AACD,SAAQC,QAAD,IAAc;AACnBV,IAAAA,KAAK,CAACW,IAAN,CAAY,GAAEV,GAAI,SAAQO,IAAK,EAA/B,EAAkC;AAACH,MAAAA,IAAD;AAAOC,MAAAA,KAAP;AAAcC,MAAAA;AAAd,KAAlC,EACGK,IADH,CACSC,QAAD,IAAc;AAClBd,MAAAA,MAAM,CAACe,IAAP,CAAY,GAAZ;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAAT,CAAcC,IAA1B;AACD,KAJH,EAKGC,KALH,CAKUC,GAAD,IAAS;AACd,cAAQC,KAAK,CAACR,QAAN,CAAeS,MAAvB;AACE,aAAK,GAAL;AACAC,UAAAA,KAAK,CAACF,KAAK,CAACR,QAAN,CAAeI,IAAf,CAAoBC,IAApB,CAAyBM,OAA1B,CAAL;AACE;;AACF,aAAK,GAAL;AACAD,UAAAA,KAAK,CAACF,KAAK,CAACR,QAAN,CAAeI,IAAf,CAAoBC,IAApB,CAAyBM,OAA1B,CAAL;AACE;;AACF,aAAK,GAAL;AACAD,UAAAA,KAAK,CAAC,mCAAD,CAAL;AACE;;AACF;AACAA,UAAAA,KAAK,CAACF,KAAK,CAACR,QAAN,CAAeI,IAAf,CAAoBC,IAApB,CAAyBM,OAA1B,CAAL;AACE;AAZJ;AAcD,KApBH;AAqBD,GAtBD;AAuBD,CA3BD;;AA4BA,eAAe;AACXpB,EAAAA;AADW,CAAf","sourcesContent":["import Router from 'next/router';\r\nimport axios from 'axios';\r\nimport { API } from '../../config';\r\nimport { setCookie, removeCookie } from '../../utils/cookie';\r\n\r\n// register user\r\nconst register = ({ name, email, password}, type) => {\r\n  if (type !== 'register') {\r\n    throw new Error('api salah');\r\n  }\r\n  return (dispatch) => {\r\n    axios.post(`${API}/auth/${type}`, {name, email, password})\r\n      .then((response) => {\r\n        Router.push('/');\r\n        console.log(response.data.meta);\r\n      })\r\n      .catch((err) => {\r\n        switch (error.response.status) {\r\n          case 422:\r\n          alert(error.response.data.meta.message);\r\n            break;\r\n          case 401:\r\n          alert(error.response.data.meta.message);\r\n            break;\r\n          case 500:\r\n          alert('Interval server error! Try again!');\r\n            break;\r\n          default:\r\n          alert(error.response.data.meta.message);\r\n            break;\r\n        }\r\n      });\r\n  };\r\n};\r\nexport default {\r\n    register,\r\n    \r\n  };"]},"metadata":{},"sourceType":"module"}