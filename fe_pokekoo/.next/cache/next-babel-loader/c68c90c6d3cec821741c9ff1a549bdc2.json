{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"D:\\\\Koomik\\\\fe_pokekoo\\\\pages\\\\forestpage.jsx\";\nvar __jsx = React.createElement;\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  content: \\\"\\\";\\n  display: table;\\n  align-items: center;\\n  clear: both;  \\n  margin:15px 20px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\n  display: flex;\\n  align-items: Left;\\n  flex-flow: column;\\n  height: 10%;\\n  width: 80%;\\n  padding: 20px;\\n  padding-bottom : 40px;\\n  margin-bottom: 8% auto;\\n  margin-top: 13% auto;\\n  border: 1px solid #fffff;\\n  border-radius: 9px;\\n  background: #f7f7f7;\\n  h2 {\\n    font-family: Arial, Helvetica, sans-serif;\\n    font-size: 14px;\\n  }\\n  button {\\n    background: #ff8019;\\n    color: #fff;\\n    padding: 11px;\\n    margin-top: 15px;\\n    width: 80%;\\n    border: none;\\n    border-radius: 4px;\\n    box-sizing: border-box;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"   display: flex;\\n    flex-flow: column;\\n    align-items: center;\\n    justify-content: center;\\n    height: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport React from 'react';\nimport Navbar from '../component/navbar';\nimport CardPoke from '../component/card';\nimport axios from 'axios';\nvar Wrapper = styled.div(_templateObject());\n_c = Wrapper;\nvar Styleddiv = styled.div(_templateObject2());\n_c2 = Styleddiv;\nvar Bariscard = styled.div(_templateObject3());\n_c3 = Bariscard;\n\nvar Forestpage = /*#__PURE__*/function (_React$Component) {\n  _inherits(Forestpage, _React$Component);\n\n  var _super = _createSuper(Forestpage);\n\n  function Forestpage(props) {\n    var _this;\n\n    _classCallCheck(this, Forestpage);\n\n    _this = _super.call(this, props);\n    _this.state = {};\n    return _this;\n  }\n\n  _createClass(Forestpage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.body.style.backgroundColor = \"#dbdbdb\";\n\n      function fetchData() {\n        return _fetchData.apply(this, arguments);\n      }\n\n      function _fetchData() {\n        _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n          var rand, random, initialURL;\n          return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n            while (1) {\n              switch (_context3.prev = _context3.next) {\n                case 0:\n                  rand = Math.random() * (70 - 7) + 1;\n                  random = Math.round(rand);\n                  initialURL = 'https://pokeapi.co/api/v2/pokemon?offset=' + random + '&limit=30';\n                  console.log(initialURL);\n                  axios.get(initialURL).then(function (respons) {\n                    console.log(respons.data.result);\n                  });\n\n                case 5:\n                case \"end\":\n                  return _context3.stop();\n              }\n            }\n          }, _callee3);\n        }));\n        return _fetchData.apply(this, arguments);\n      }\n\n      fetchData();\n      console.log(response.results);\n\n      var loadPokemon = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(data) {\n          var _pokemonData;\n\n          return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n            while (1) {\n              switch (_context2.prev = _context2.next) {\n                case 0:\n                  _context2.next = 2;\n                  return Promise.all(data.map( /*#__PURE__*/function () {\n                    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(pokemon) {\n                      var pokemonRecord;\n                      return _regeneratorRuntime.wrap(function _callee$(_context) {\n                        while (1) {\n                          switch (_context.prev = _context.next) {\n                            case 0:\n                              _context.next = 2;\n                              return axios.get(pokemon).then(function (respons) {\n                                console.log(respons.data);\n                              });\n\n                            case 2:\n                              pokemonRecord = _context.sent;\n                              return _context.abrupt(\"return\", pokemonRecord);\n\n                            case 4:\n                            case \"end\":\n                              return _context.stop();\n                          }\n                        }\n                      }, _callee);\n                    }));\n\n                    return function (_x2) {\n                      return _ref2.apply(this, arguments);\n                    };\n                  }()));\n\n                case 2:\n                  _pokemonData = _context2.sent;\n                  setPokemonData(_pokemonData);\n\n                case 4:\n                case \"end\":\n                  return _context2.stop();\n              }\n            }\n          }, _callee2);\n        }));\n\n        return function loadPokemon(_x) {\n          return _ref.apply(this, arguments);\n        };\n      }();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(Wrapper, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }\n      }, __jsx(Navbar, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 16\n        }\n      }), __jsx(Styleddiv, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 17\n        }\n      }, __jsx(\"h2\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }\n      }, \"POKEMON FOREST \"), __jsx(Bariscard, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }\n      }, __jsx(CardPoke, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }\n      }))));\n    }\n  }]);\n\n  return Forestpage;\n}(React.Component);\n\nexport default Forestpage;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Styleddiv\");\n$RefreshReg$(_c3, \"Bariscard\");","map":{"version":3,"sources":["D:/Koomik/fe_pokekoo/pages/forestpage.jsx"],"names":["styled","React","Navbar","CardPoke","axios","Wrapper","div","Styleddiv","Bariscard","Forestpage","props","state","document","body","style","backgroundColor","fetchData","rand","Math","random","round","initialURL","console","log","get","then","respons","data","result","response","results","loadPokemon","Promise","all","map","pokemon","pokemonRecord","_pokemonData","setPokemonData","Component"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\r\nimport React from 'react';\r\nimport Navbar from '../component/navbar';\r\nimport CardPoke from '../component/card';\r\n\r\n\r\n\r\nimport axios from 'axios';\r\n\r\nconst Wrapper = styled.div\r\n`   display: flex;\r\n    flex-flow: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst Styleddiv = styled.div`\r\n\r\n  display: flex;\r\n  align-items: Left;\r\n  flex-flow: column;\r\n  height: 10%;\r\n  width: 80%;\r\n  padding: 20px;\r\n  padding-bottom : 40px;\r\n  margin-bottom: 8% auto;\r\n  margin-top: 13% auto;\r\n  border: 1px solid #fffff;\r\n  border-radius: 9px;\r\n  background: #f7f7f7;\r\n  h2 {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-size: 14px;\r\n  }\r\n  button {\r\n    background: #ff8019;\r\n    color: #fff;\r\n    padding: 11px;\r\n    margin-top: 15px;\r\n    width: 80%;\r\n    border: none;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nconst Bariscard = styled.div\r\n`\r\n  content: \"\";\r\n  display: table;\r\n  align-items: center;\r\n  clear: both;  \r\n  margin:15px 20px;\r\n`;\r\n\r\n\r\n\r\nclass Forestpage extends React.Component{\r\nconstructor(props){\r\n    super(props);\r\n    this.state={\r\n\r\n    }\r\n}\r\n    \r\n\r\n    \r\n\r\n    componentDidMount()\r\n    {\r\n        document.body.style.backgroundColor = \"#dbdbdb\";\r\n\r\n        async function fetchData() {\r\n            \r\n            const rand = Math.random() * (70 - 7) + 1;\r\n            const random = Math.round(rand);\r\n            const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset='+random+'&limit=30';\r\n            console.log(initialURL);\r\n            \r\n            axios.get(initialURL).then((respons)=>{\r\n                console.log(respons.data.result);\r\n                 \r\n            });\r\n           \r\n            \r\n          }\r\n          fetchData();\r\n          console.log(response.results);\r\n   \r\n          const loadPokemon = async (data) => {\r\n            let _pokemonData = await Promise.all(data.map(async pokemon => {\r\n              let pokemonRecord = await \r\n              axios.get(pokemon).then((respons)=>{\r\n                console.log(respons.data);\r\n            });\r\n              \r\n              return pokemonRecord\r\n            }))\r\n            setPokemonData(_pokemonData);\r\n          }\r\n    }\r\n\r\n     \r\n\r\n\r\n\r\n\r\n\r\n    render(){\r\n        return(\r\n            <Wrapper>\r\n               <Navbar/>\r\n                <Styleddiv>\r\n                    <h2>POKEMON FOREST </h2>\r\n                    <Bariscard>        \r\n                    <CardPoke />\r\n                        \r\n                    </Bariscard>\r\n                </Styleddiv>\r\n            </Wrapper>\r\n        );\r\n    }\r\n}\r\nexport default Forestpage;"]},"metadata":{},"sourceType":"module"}