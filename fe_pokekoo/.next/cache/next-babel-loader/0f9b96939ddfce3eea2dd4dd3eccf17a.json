{"ast":null,"code":"var _jsxFileName = \"D:\\\\Koomik\\\\fe_pokekoo\\\\pages\\\\testpage.jsx\";\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport 'isomorphic-unfetch';\nimport Cookies from 'js-cookie';\n\nclass Testpage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pokemon: [],\n      token: ''\n    };\n  }\n\n  render() {\n    return __jsx(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }\n    }, \"ss\", __jsx(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 10\n      }\n    }, \"POKEMON FOREST \", __jsx(\"button\", {\n      onClick: componentDidMount,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 29\n      }\n    }, \" reload \"), \" \"), __jsx(\"ul\", {\n      className: \"list\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }\n    }, pokemon.map(pokemon => {\n      return __jsx(\"li\", {\n        key: pokemon.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 15\n        }\n      }, __jsx(\"span\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 17\n        }\n      }, pokemon.sprites.front_default, \" \"));\n    })));\n  }\n\n} // const Testpage = ({pokemon = [], token ,count}) =>(\n//     <div>\n//        {console.log(token)}\n//       ss<h2>POKEMON FOREST <button onClick={componentDidMount}> reload </button> </h2>\n//         <ul className=\"list\">\n//           {pokemon.map(pokemon => {\n//             return (\n//               <li key={pokemon.name} >\n//                 <span>{pokemon.sprites.front_default} </span>\n//               </li>\n//             )\n//           })}\n//         </ul>\n//     </div>\n// )\n// function componentDidMount () {\n//   fetchData();\n// }\n\n\nexport function getPokemon({\n  url\n}) {\n  return new Promise((resolve, reject) => {\n    fetch(url).then(res => res.json()).then(data => {\n      resolve(data);\n    });\n  });\n}\nTestpage.getInitialProps = fetchData;\n\nasync function fetchData() {\n  const rand = Math.round(Math.random() * (964 - 1) + 1);\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset=' + rand + '&limit=30';\n  const fetchRes = await fetch(initialURL);\n  const res = await fetchRes.json();\n  const data = res.results;\n  const count = res.count;\n  const token = Cookies.get('token');\n  let pokemonData = await Promise.all(data.map(async pokemon => {\n    let pokemonRecord = await getPokemon(pokemon);\n    return pokemonRecord;\n  }));\n  console.log(pokemonData);\n  return {\n    pokemon: pokemonData,\n    count,\n    token\n  };\n}\n\nexport default Testpage;","map":{"version":3,"sources":["D:/Koomik/fe_pokekoo/pages/testpage.jsx"],"names":["React","useState","Cookies","Testpage","Component","constructor","props","state","pokemon","token","render","componentDidMount","map","name","sprites","front_default","getPokemon","url","Promise","resolve","reject","fetch","then","res","json","data","getInitialProps","fetchData","rand","Math","round","random","initialURL","fetchRes","results","count","get","pokemonData","all","pokemonRecord","console","log"],"mappings":";;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAkC,OAAlC;AACA,OAAQ,oBAAR;AACA,OAAOC,OAAP,MAAoB,WAApB;;AAKA,MAAMC,QAAN,SAAuBH,KAAK,CAACI,SAA7B,CAAsC;AACpCC,EAAAA,WAAW,CAACC,KAAD,EAAO;AAChB,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAW;AACPC,MAAAA,OAAO,EAAC,EADD;AAEPC,MAAAA,KAAK,EAAC;AAFC,KAAX;AAMH;;AAMCC,EAAAA,MAAM,GAAE;AACN,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAEG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAAmB;AAAQ,MAAA,OAAO,EAAEC,iBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAnB,MAFH,EAGE;AAAI,MAAA,SAAS,EAAC,MAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGH,OAAO,CAACI,GAAR,CAAYJ,OAAO,IAAI;AAEtB,aACE;AAAI,QAAA,GAAG,EAAEA,OAAO,CAACK,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAOL,OAAO,CAACM,OAAR,CAAgBC,aAAvB,MADF,CADF;AAMD,KARA,CADH,CAHF,CADF;AAiBD;;AAjCmC,C,CAsCtC;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;;;AAEA,OAAO,SAASC,UAAT,CAAoB;AAAEC,EAAAA;AAAF,CAApB,EAA6B;AAClC,SAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpCC,IAAAA,KAAK,CAACJ,GAAD,CAAL,CAAWK,IAAX,CAAgBC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAAvB,EACKF,IADL,CACUG,IAAI,IAAI;AACVN,MAAAA,OAAO,CAACM,IAAD,CAAP;AACH,KAHL;AAIH,GALM,CAAP;AAMD;AAKDtB,QAAQ,CAACuB,eAAT,GAA2BC,SAA3B;;AAEA,eAAeA,SAAf,GAA2B;AAEzB,QAAMC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,MAAiB,MAAM,CAAvB,IAA4B,CAAvC,CAAb;AACA,QAAMC,UAAU,GAAG,8CAA4CJ,IAA5C,GAAiD,WAApE;AAEA,QAAMK,QAAQ,GAAG,MAAMZ,KAAK,CAACW,UAAD,CAA5B;AACA,QAAMT,GAAG,GAAG,MAAMU,QAAQ,CAACT,IAAT,EAAlB;AAEA,QAAMC,IAAI,GAAGF,GAAG,CAACW,OAAjB;AACA,QAAMC,KAAK,GAAGZ,GAAG,CAACY,KAAlB;AAEA,QAAM1B,KAAK,GAAGP,OAAO,CAACkC,GAAR,CAAY,OAAZ,CAAd;AAGA,MAAIC,WAAW,GAAG,MAAMnB,OAAO,CAACoB,GAAR,CAAYb,IAAI,CAACb,GAAL,CAAS,MAAMJ,OAAN,IAAiB;AAC5D,QAAI+B,aAAa,GAAG,MAAMvB,UAAU,CAACR,OAAD,CAApC;AACA,WAAO+B,aAAP;AACD,GAHmC,CAAZ,CAAxB;AAKAC,EAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACA,SAAO;AACL7B,IAAAA,OAAO,EAAE6B,WADJ;AAELF,IAAAA,KAFK;AAEE1B,IAAAA;AAFF,GAAP;AAID;;AAEC,eAAeN,QAAf","sourcesContent":["import React , { useState }  from 'react'\r\nimport  'isomorphic-unfetch'\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n\r\n\r\nclass Testpage extends React.Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n        pokemon:[],\r\n        token:''\r\n       \r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  render(){\r\n    return(\r\n      <div>\r\n     {/* {console.log(token)} */}\r\n       ss<h2>POKEMON FOREST <button onClick={componentDidMount}> reload </button> </h2>\r\n        <ul className=\"list\">\r\n          {pokemon.map(pokemon => {\r\n           \r\n            return (\r\n              <li key={pokemon.name} >\r\n                <span>{pokemon.sprites.front_default} </span>\r\n                \r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n    </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\n// const Testpage = ({pokemon = [], token ,count}) =>(\r\n\r\n \r\n//     <div>\r\n//        {console.log(token)}\r\n//       ss<h2>POKEMON FOREST <button onClick={componentDidMount}> reload </button> </h2>\r\n//         <ul className=\"list\">\r\n//           {pokemon.map(pokemon => {\r\n           \r\n//             return (\r\n//               <li key={pokemon.name} >\r\n//                 <span>{pokemon.sprites.front_default} </span>\r\n                \r\n//               </li>\r\n//             )\r\n//           })}\r\n//         </ul>\r\n//     </div>\r\n// )\r\n\r\n\r\n\r\n// function componentDidMount () {\r\n  \r\n//   fetchData();\r\n// }\r\n  \r\nexport function getPokemon({ url }) {\r\n  return new Promise((resolve, reject) => {\r\n      fetch(url).then(res => res.json())\r\n          .then(data => {\r\n              resolve(data)\r\n          })\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\nTestpage.getInitialProps = fetchData;\r\n\r\nasync function fetchData() {\r\n  \r\n  const rand = Math.round(Math.random() * (964 - 1) + 1);\r\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset='+rand+'&limit=30';\r\n  \r\n  const fetchRes = await fetch(initialURL)\r\n  const res = await fetchRes.json()\r\n  \r\n  const data = res.results\r\n  const count = res.count \r\n \r\n  const token = Cookies.get('token')\r\n \r\n\r\n  let pokemonData = await Promise.all(data.map(async pokemon => {\r\n    let pokemonRecord = await getPokemon(pokemon)\r\n    return pokemonRecord\r\n  }))\r\n \r\n  console.log(pokemonData)\r\n  return {\r\n    pokemon: pokemonData,\r\n    count, token\r\n  }\r\n}\r\n\r\n  export default Testpage"]},"metadata":{},"sourceType":"module"}