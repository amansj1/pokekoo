{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Koomik\\\\fe_pokekoo\\\\pages\\\\testpage.jsx\";\n\nvar __jsx = React.createElement;\nimport React, { useState } from 'react';\nimport 'isomorphic-unfetch';\nimport Cookies from 'js-cookie';\n\nvar Testpage = function Testpage(_ref) {\n  var _ref$pokemon = _ref.pokemon,\n      pokemon = _ref$pokemon === void 0 ? [] : _ref$pokemon,\n      token = _ref.token,\n      count = _ref.count;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }, console.log(token), \"ss\", __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, \"POKEMON FOREST \", __jsx(\"button\", {\n    onClick: componentDidMount,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 28\n    }\n  }, \" reload \"), \" \"), __jsx(\"ul\", {\n    className: \"list\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }\n  }, pokemon.map(function (pokemon) {\n    return __jsx(\"li\", {\n      key: pokemon.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 15\n      }\n    }, __jsx(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 17\n      }\n    }, pokemon.sprites.front_default, \" \"));\n  })));\n};\n\n_c = Testpage;\n\nfunction componentDidMount() {\n  fetchData();\n}\n\nexport function getPokemon(_ref2) {\n  var url = _ref2.url;\n  return new Promise(function (resolve, reject) {\n    fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      resolve(data);\n    });\n  });\n}\nTestpage.getInitialProps = fetchData;\n\nfunction fetchData() {\n  return _fetchData.apply(this, arguments);\n}\n\nfunction _fetchData() {\n  _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var rand, initialURL, fetchRes, res, data, count, token, pokemonData;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            rand = Math.round(Math.random() * (964 - 1) + 1);\n            initialURL = 'https://pokeapi.co/api/v2/pokemon?offset=' + rand + '&limit=30';\n            _context2.next = 4;\n            return fetch(initialURL);\n\n          case 4:\n            fetchRes = _context2.sent;\n            _context2.next = 7;\n            return fetchRes.json();\n\n          case 7:\n            res = _context2.sent;\n            data = res.results;\n            count = res.count;\n            token = Cookies.get('token');\n            _context2.next = 13;\n            return Promise.all(data.map( /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(pokemon) {\n                var pokemonRecord;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return getPokemon(pokemon);\n\n                      case 2:\n                        pokemonRecord = _context.sent;\n                        return _context.abrupt(\"return\", pokemonRecord);\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x) {\n                return _ref3.apply(this, arguments);\n              };\n            }()));\n\n          case 13:\n            pokemonData = _context2.sent;\n            console.log(pokemonData);\n            return _context2.abrupt(\"return\", {\n              pokemon: pokemonData,\n              count: count,\n              token: token\n            });\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _fetchData.apply(this, arguments);\n}\n\nexport default Testpage;\n\nvar _c;\n\n$RefreshReg$(_c, \"Testpage\");","map":{"version":3,"sources":["D:/Koomik/fe_pokekoo/pages/testpage.jsx"],"names":["React","useState","Cookies","Testpage","pokemon","token","count","console","log","componentDidMount","map","name","sprites","front_default","fetchData","getPokemon","url","Promise","resolve","reject","fetch","then","res","json","data","getInitialProps","rand","Math","round","random","initialURL","fetchRes","results","get","all","pokemonRecord","pokemonData"],"mappings":"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","sourcesContent":["import React , { useState }  from 'react'\r\nimport  'isomorphic-unfetch'\r\nimport Cookies from 'js-cookie';\r\n\r\n\r\n\r\n\r\n\r\n\r\nconst Testpage = ({pokemon = [], token ,count}) =>(\r\n\r\n \r\n    <div>\r\n       {console.log(token)}\r\n      ss<h2>POKEMON FOREST <button onClick={componentDidMount}> reload </button> </h2>\r\n        <ul className=\"list\">\r\n          {pokemon.map(pokemon => {\r\n           \r\n            return (\r\n              <li key={pokemon.name} >\r\n                <span>{pokemon.sprites.front_default} </span>\r\n                \r\n              </li>\r\n            )\r\n          })}\r\n        </ul>\r\n    </div>\r\n)\r\n\r\n\r\n\r\nfunction componentDidMount () {\r\n  \r\n  fetchData();\r\n}\r\n  \r\nexport function getPokemon({ url }) {\r\n  return new Promise((resolve, reject) => {\r\n      fetch(url).then(res => res.json())\r\n          .then(data => {\r\n              resolve(data)\r\n          })\r\n  });\r\n}\r\n\r\n\r\n\r\n\r\nTestpage.getInitialProps = fetchData;\r\n\r\nasync function fetchData() {\r\n  \r\n  const rand = Math.round(Math.random() * (964 - 1) + 1);\r\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset='+rand+'&limit=30';\r\n  \r\n  const fetchRes = await fetch(initialURL)\r\n  const res = await fetchRes.json()\r\n  \r\n  const data = res.results\r\n  const count = res.count \r\n \r\n  const token = Cookies.get('token')\r\n \r\n\r\n  let pokemonData = await Promise.all(data.map(async pokemon => {\r\n    let pokemonRecord = await getPokemon(pokemon)\r\n    return pokemonRecord\r\n  }))\r\n \r\n  console.log(pokemonData)\r\n  return {\r\n    pokemon: pokemonData,\r\n    count, token\r\n  }\r\n}\r\n\r\n  export default Testpage"]},"metadata":{},"sourceType":"module"}