{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Koomik\\\\fe_pokekoo\\\\pages\\\\forestpage.jsx\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  content: \\\"\\\";\\n  display: table;\\n  align-items: center;\\n  clear: both;  \\n  margin:15px 20px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\n  display: flex;\\n  align-items: Left;\\n  flex-flow: column;\\n  height: 10%;\\n  width: 80%;\\n  padding: 20px;\\n  padding-bottom : 40px;\\n  margin-bottom: 8% auto;\\n  margin-top: 13% auto;\\n  border: 1px solid #fffff;\\n  border-radius: 9px;\\n  background: #f7f7f7;\\n  h2 {\\n    font-family: Arial, Helvetica, sans-serif;\\n    font-size: 14px;\\n  }\\n  button {\\n    background: #ff8019;\\n    color: #fff;\\n    padding: 11px;\\n    margin-top: 15px;\\n    width: 80%;\\n    border: none;\\n    border-radius: 4px;\\n    box-sizing: border-box;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"   display: flex;\\n    flex-flow: column;\\n    align-items: center;44\\n    justify-content: center;\\n    height: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport React from 'react';\nimport Navbar from '../component/navbar';\nimport CardPoke from '../component/card';\nimport fetch from 'isomorphic-unfetch';\nvar Wrapper = styled.div(_templateObject());\n_c = Wrapper;\nvar Styleddiv = styled.div(_templateObject2());\n_c2 = Styleddiv;\nvar Bariscard = styled.div(_templateObject3());\n_c3 = Bariscard;\n\nvar Forestpage = function Forestpage(_ref) {\n  var _ref$pokemon = _ref.pokemon,\n      pokemon = _ref$pokemon === void 0 ? [] : _ref$pokemon,\n      count = _ref.count;\n  return __jsx(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(Navbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), __jsx(Styleddiv, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"POKEMON FOREST \"), __jsx(Bariscard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 14\n    }\n  }, pokemon.map(function (pokemon) {\n    return __jsx(CardPoke, {\n      namaPokemon: pokemon.name,\n      urlPoK: pokemon.sprites.front_default,\n      key: pokemon.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 21\n      }\n    });\n  }))));\n};\n\n_c4 = Forestpage;\n\nForestpage.getInitialProps = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(_ref2) {\n    var req, rand, initialURL, fetchRes, res, data, count, pokemonData;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            req = _ref2.req;\n            rand = Math.round(Math.random() * (964 - 1) + 1);\n            initialURL = 'https://pokeapi.co/api/v2/pokemon?offset=' + rand + '&limit=30';\n            _context2.next = 5;\n            return fetch(initialURL);\n\n          case 5:\n            fetchRes = _context2.sent;\n            _context2.next = 8;\n            return fetchRes.json();\n\n          case 8:\n            res = _context2.sent;\n            data = res.results;\n            count = res.count;\n            _context2.next = 13;\n            return Promise.all(data.map( /*#__PURE__*/function () {\n              var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(pokemon) {\n                var pokemonRecord;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return getPokemon(pokemon);\n\n                      case 2:\n                        pokemonRecord = _context.sent;\n                        return _context.abrupt(\"return\", pokemonRecord);\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x2) {\n                return _ref4.apply(this, arguments);\n              };\n            }()));\n\n          case 13:\n            pokemonData = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              pokemon: pokemonData,\n              count: count\n            });\n\n          case 15:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function (_x) {\n    return _ref3.apply(this, arguments);\n  };\n}();\n\nexport function getPokemon(_ref5) {\n  var url = _ref5.url;\n  return new Promise(function (resolve, reject) {\n    fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      resolve(data);\n    });\n  });\n}\nexport default Forestpage;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Styleddiv\");\n$RefreshReg$(_c3, \"Bariscard\");\n$RefreshReg$(_c4, \"Forestpage\");","map":{"version":3,"sources":["D:/Koomik/fe_pokekoo/pages/forestpage.jsx"],"names":["styled","React","Navbar","CardPoke","fetch","Wrapper","div","Styleddiv","Bariscard","Forestpage","pokemon","count","map","name","sprites","front_default","getInitialProps","req","rand","Math","round","random","initialURL","fetchRes","json","res","data","results","Promise","all","getPokemon","pokemonRecord","pokemonData","url","resolve","reject","then"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\r\nimport React from 'react';\r\nimport Navbar from '../component/navbar';\r\nimport CardPoke from '../component/card';\r\nimport fetch from 'isomorphic-unfetch';\r\n\r\nconst Wrapper = styled.div\r\n`   display: flex;\r\n    flex-flow: column;\r\n    align-items: center;44\r\n    justify-content: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst Styleddiv = styled.div`\r\n\r\n  display: flex;\r\n  align-items: Left;\r\n  flex-flow: column;\r\n  height: 10%;\r\n  width: 80%;\r\n  padding: 20px;\r\n  padding-bottom : 40px;\r\n  margin-bottom: 8% auto;\r\n  margin-top: 13% auto;\r\n  border: 1px solid #fffff;\r\n  border-radius: 9px;\r\n  background: #f7f7f7;\r\n  h2 {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-size: 14px;\r\n  }\r\n  button {\r\n    background: #ff8019;\r\n    color: #fff;\r\n    padding: 11px;\r\n    margin-top: 15px;\r\n    width: 80%;\r\n    border: none;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nconst Bariscard = styled.div\r\n`\r\n  content: \"\";\r\n  display: table;\r\n  align-items: center;\r\n  clear: both;  \r\n  margin:15px 20px;\r\n`;\r\n\r\nconst Forestpage = ({pokemon = [], count}) =>(\r\n\r\n    <Wrapper>\r\n      <Navbar/>\r\n        <Styleddiv>\r\n            <h2>POKEMON FOREST </h2>\r\n             <Bariscard> \r\n                {pokemon.map(pokemon =>{ return(\r\n\r\n                    <CardPoke namaPokemon={pokemon.name} urlPoK={pokemon.sprites.front_default} key={pokemon.name}/>\r\n                \r\n                )})}\r\n             </Bariscard>\r\n         </Styleddiv>\r\n     </Wrapper>\r\n   \r\n)\r\n\r\nForestpage.getInitialProps = async ({ req }) => {\r\n  const rand = Math.round(Math.random() * (964 - 1) + 1);\r\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset='+rand+'&limit=30';\r\n  \r\n  const fetchRes = await fetch(initialURL)\r\n  const res = await fetchRes.json()\r\n\r\n  const data = res.results\r\n  const count = res.count \r\n\r\n\r\n  let pokemonData = await Promise.all(data.map(async pokemon => {\r\n    let pokemonRecord = await getPokemon(pokemon)\r\n    return pokemonRecord\r\n  }))\r\n \r\n  return {\r\n    pokemon: pokemonData,\r\n    count,\r\n  }}\r\n\r\n  \r\n  export function getPokemon({ url }) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}\r\n\r\n\r\nexport default Forestpage\r\n\r\n"]},"metadata":{},"sourceType":"module"}