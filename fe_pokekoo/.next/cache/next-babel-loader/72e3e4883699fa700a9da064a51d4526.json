{"ast":null,"code":"var _jsxFileName = \"D:\\\\Koomik\\\\fe_pokekoo\\\\pages\\\\forestpage.jsx\";\nvar __jsx = React.createElement;\nimport styled from 'styled-components';\nimport React from 'react';\nimport Navbar from '../component/navbar';\nimport CardPoke from '../component/card';\nimport fetch from 'isomorphic-unfetch';\nimport Cookies from 'js-cookie';\nimport Router from 'next/router';\nconst Wrapper = styled.div`   display: flex;\n    flex-flow: column;\n    align-items: center;\n    justify-content: center;\n    height: 100%;\n`;\nconst Styleddiv = styled.div`\n\n  display: flex;\n  align-items: Left;\n  flex-flow: column;\n  height: 10%;\n  width: 80%;\n  padding: 20px;\n  padding-bottom : 40px;\n  margin-bottom: 8% auto;\n  margin-top: 13% auto;\n  border: 1px solid #fffff;\n  border-radius: 9px;\n  background: #f7f7f7;\n  h2 {\n    font-family: Arial, Helvetica, sans-serif;\n    font-size: 14px;\n  }\n  button {\n    background: #ff8019;\n    color: #fff;\n    padding: 11px;\n    margin-top: 15px;\n    width: 80%;\n    border: none;\n    border-radius: 4px;\n    box-sizing: border-box;\n  }\n`;\nconst Bariscard = styled.div`\n  content: \"\";\n  display: table;\n  align-items: center;\n  clear: both;\n  margin:15px 20px;\n`;\n\nconst Forestpage = ({\n  pokemon = [],\n  token,\n  count\n}) => __jsx(Wrapper, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }\n}, __jsx(Navbar, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }\n}), __jsx(Styleddiv, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }\n}, __jsx(\"h2\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 13\n  }\n}, \"POKEMON FOREST \", token, \" \"), __jsx(Bariscard, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 14\n  }\n}, pokemon.map(pokemon => {\n  return __jsx(CardPoke, {\n    namaPokemon: pokemon.name,\n    urlPoK: pokemon.sprites.front_default,\n    key: pokemon.name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 21\n    }\n  });\n}))));\n\nForestpage.getInitialProps = async () => {\n  const rand = Math.round(Math.random() * (964 - 1) + 1);\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset=' + rand + '&limit=30';\n  const fetchRes = await fetch(initialURL);\n  const res = await fetchRes.json();\n  const data = res.results;\n  const count = res.count;\n  const token = Cookies.get('token');\n  console.log(token); // if(token<0){\n  //   Router.push('/');\n  // }\n\n  let pokemonData = await Promise.all(data.map(async pokemon => {\n    let pokemonRecord = await getPokemon(pokemon);\n    return pokemonRecord;\n  }));\n  return {\n    pokemon: pokemonData,\n    count,\n    token\n  };\n};\n\nexport function getPokemon({\n  url\n}) {\n  return new Promise((resolve, reject) => {\n    fetch(url).then(res => res.json()).then(data => {\n      resolve(data);\n    });\n  });\n}\nexport default Forestpage;","map":{"version":3,"sources":["D:/Koomik/fe_pokekoo/pages/forestpage.jsx"],"names":["styled","React","Navbar","CardPoke","fetch","Cookies","Router","Wrapper","div","Styleddiv","Bariscard","Forestpage","pokemon","token","count","map","name","sprites","front_default","getInitialProps","rand","Math","round","random","initialURL","fetchRes","res","json","data","results","get","console","log","pokemonData","Promise","all","pokemonRecord","getPokemon","url","resolve","reject","then"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\r\nimport React from 'react';\r\nimport Navbar from '../component/navbar';\r\nimport CardPoke from '../component/card';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Cookies from 'js-cookie';\r\nimport Router from 'next/router';\r\n\r\n\r\n\r\nconst Wrapper = styled.div\r\n`   display: flex;\r\n    flex-flow: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst Styleddiv = styled.div`\r\n\r\n  display: flex;\r\n  align-items: Left;\r\n  flex-flow: column;\r\n  height: 10%;\r\n  width: 80%;\r\n  padding: 20px;\r\n  padding-bottom : 40px;\r\n  margin-bottom: 8% auto;\r\n  margin-top: 13% auto;\r\n  border: 1px solid #fffff;\r\n  border-radius: 9px;\r\n  background: #f7f7f7;\r\n  h2 {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-size: 14px;\r\n  }\r\n  button {\r\n    background: #ff8019;\r\n    color: #fff;\r\n    padding: 11px;\r\n    margin-top: 15px;\r\n    width: 80%;\r\n    border: none;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nconst Bariscard = styled.div\r\n`\r\n  content: \"\";\r\n  display: table;\r\n  align-items: center;\r\n  clear: both;\r\n  margin:15px 20px;\r\n`;\r\n\r\nconst Forestpage = ({pokemon = [],token, count}) =>(\r\n\r\n    <Wrapper>\r\n      <Navbar/>\r\n        <Styleddiv>\r\n            <h2>POKEMON FOREST {token} </h2>\r\n             <Bariscard> \r\n                {pokemon.map(pokemon =>{ return(\r\n\r\n                    <CardPoke namaPokemon={pokemon.name} urlPoK={pokemon.sprites.front_default} key={pokemon.name}/>\r\n                \r\n                )})}\r\n             </Bariscard>\r\n         </Styleddiv>\r\n     </Wrapper>\r\n   \r\n)\r\n\r\nForestpage.getInitialProps = async () => {\r\n  const rand = Math.round(Math.random() * (964 - 1) + 1);\r\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset='+rand+'&limit=30';\r\n  \r\n  const fetchRes = await fetch(initialURL)\r\n  const res = await fetchRes.json()\r\n\r\n  const data = res.results\r\n  const count = res.count \r\n\r\n  const token = Cookies.get('token')\r\n  console.log(token)\r\n  // if(token<0){\r\n  //   Router.push('/');\r\n  // }\r\n\r\n  let pokemonData = await Promise.all(data.map(async pokemon => {\r\n    let pokemonRecord = await getPokemon(pokemon)\r\n    return pokemonRecord\r\n  }))\r\n \r\n  return {\r\n    pokemon: pokemonData,\r\n    count, token\r\n  }}\r\n\r\n  \r\n  export function getPokemon({ url }) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}\r\n\r\n\r\nexport default Forestpage\r\n\r\n"]},"metadata":{},"sourceType":"module"}