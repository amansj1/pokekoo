{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\Koomik\\\\fe_pokekoo\\\\pages\\\\forestpage.jsx\";\n\nvar __jsx = React.createElement;\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  content: \\\"\\\";\\n  display: table;\\n  align-items: center;\\n  clear: both;\\n  margin:15px 20px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n\\n  display: flex;\\n  align-items: Left;\\n  flex-flow: column;\\n  height: 10%;\\n  width: 80%;\\n  padding: 20px;\\n  padding-bottom : 40px;\\n  margin-bottom: 8% auto;\\n  margin-top: 13% auto;\\n  border: 1px solid #fffff;\\n  border-radius: 9px;\\n  background: #f7f7f7;\\n  h2 {\\n    font-family: Arial, Helvetica, sans-serif;\\n    font-size: 14px;\\n  }\\n  button {\\n    background: #ff8019;\\n    color: #fff;\\n    padding: 11px;\\n    margin-top: 15px;\\n    width: 80%;\\n    border: none;\\n    border-radius: 4px;\\n    box-sizing: border-box;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"   display: flex;\\n    flex-flow: column;\\n    align-items: center;\\n    justify-content: center;\\n    height: 100%;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport styled from 'styled-components';\nimport React from 'react';\nimport Head from 'next/head';\nimport Navbar from '../component/navbar';\nimport CardPoke from '../component/card';\nimport fetch from 'isomorphic-unfetch';\nimport Cookies from 'js-cookie';\nimport Router from 'next/router';\nvar Wrapper = styled.div(_templateObject());\n_c = Wrapper;\nvar Styleddiv = styled.div(_templateObject2());\n_c2 = Styleddiv;\nvar Bariscard = styled.div(_templateObject3());\n_c3 = Bariscard;\n\nvar Forestpage = function Forestpage(_ref) {\n  var _ref$pokemon = _ref.pokemon,\n      pokemon = _ref$pokemon === void 0 ? [] : _ref$pokemon,\n      token = _ref.token,\n      count = _ref.count;\n  return __jsx(Wrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 5\n    }\n  }, __jsx(Navbar, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), __jsx(Styleddiv, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }\n  }, __jsx(\"h2\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"POKEMON FOREST \", __jsx(\"button\", {\n    onClick: fetchData,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 32\n    }\n  }, \" reload \"), \" \"), __jsx(Bariscard, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 14\n    }\n  }, pokemon.map(function (pokemon) {\n    return __jsx(CardPoke, {\n      namaPokemon: pokemon.name,\n      urlPoK: pokemon.sprites.front_default,\n      key: pokemon.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }\n    });\n  }))));\n};\n\n_c4 = Forestpage;\nexport function getPokemon(_ref2) {\n  var url = _ref2.url;\n  return new Promise(function (resolve, reject) {\n    fetch(url).then(function (res) {\n      return res.json();\n    }).then(function (data) {\n      resolve(data);\n    });\n  });\n}\nForestpage.getInitialProps = fetchData;\n\nfunction fetchData() {\n  return _fetchData.apply(this, arguments);\n}\n\nfunction _fetchData() {\n  _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n    var rand, initialURL, fetchRes, res, data, count, token, pokemonData;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            rand = Math.round(Math.random() * (964 - 1) + 1);\n            initialURL = 'https://pokeapi.co/api/v2/pokemon?offset=' + rand + '&limit=30';\n            _context2.next = 4;\n            return fetch(initialURL);\n\n          case 4:\n            fetchRes = _context2.sent;\n            _context2.next = 7;\n            return fetchRes.json();\n\n          case 7:\n            res = _context2.sent;\n            data = res.results;\n            count = res.count;\n            token = Cookies.get('token');\n            console.log(token); // if(token<0){\n            //   Router.push('/');\n            // }\n\n            _context2.next = 14;\n            return Promise.all(data.map( /*#__PURE__*/function () {\n              var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(pokemon) {\n                var pokemonRecord;\n                return _regeneratorRuntime.wrap(function _callee$(_context) {\n                  while (1) {\n                    switch (_context.prev = _context.next) {\n                      case 0:\n                        _context.next = 2;\n                        return getPokemon(pokemon);\n\n                      case 2:\n                        pokemonRecord = _context.sent;\n                        return _context.abrupt(\"return\", pokemonRecord);\n\n                      case 4:\n                      case \"end\":\n                        return _context.stop();\n                    }\n                  }\n                }, _callee);\n              }));\n\n              return function (_x) {\n                return _ref3.apply(this, arguments);\n              };\n            }()));\n\n          case 14:\n            pokemonData = _context2.sent;\n            return _context2.abrupt(\"return\", {\n              pokemon: pokemonData,\n              count: count,\n              token: token\n            });\n\n          case 16:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n  return _fetchData.apply(this, arguments);\n}\n\nexport default Forestpage;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Wrapper\");\n$RefreshReg$(_c2, \"Styleddiv\");\n$RefreshReg$(_c3, \"Bariscard\");\n$RefreshReg$(_c4, \"Forestpage\");","map":{"version":3,"sources":["D:/Koomik/fe_pokekoo/pages/forestpage.jsx"],"names":["styled","React","Head","Navbar","CardPoke","fetch","Cookies","Router","Wrapper","div","Styleddiv","Bariscard","Forestpage","pokemon","token","count","fetchData","map","name","sprites","front_default","getPokemon","url","Promise","resolve","reject","then","res","json","data","getInitialProps","rand","Math","round","random","initialURL","fetchRes","results","get","console","log","all","pokemonRecord","pokemonData"],"mappings":"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","sourcesContent":["import styled from 'styled-components';\r\nimport React from 'react';\r\nimport Head from 'next/head'\r\nimport Navbar from '../component/navbar';\r\nimport CardPoke from '../component/card';\r\nimport fetch from 'isomorphic-unfetch';\r\nimport Cookies from 'js-cookie';\r\nimport Router from 'next/router';\r\n\r\n\r\n\r\nconst Wrapper = styled.div\r\n`   display: flex;\r\n    flex-flow: column;\r\n    align-items: center;\r\n    justify-content: center;\r\n    height: 100%;\r\n`;\r\n\r\nconst Styleddiv = styled.div`\r\n\r\n  display: flex;\r\n  align-items: Left;\r\n  flex-flow: column;\r\n  height: 10%;\r\n  width: 80%;\r\n  padding: 20px;\r\n  padding-bottom : 40px;\r\n  margin-bottom: 8% auto;\r\n  margin-top: 13% auto;\r\n  border: 1px solid #fffff;\r\n  border-radius: 9px;\r\n  background: #f7f7f7;\r\n  h2 {\r\n    font-family: Arial, Helvetica, sans-serif;\r\n    font-size: 14px;\r\n  }\r\n  button {\r\n    background: #ff8019;\r\n    color: #fff;\r\n    padding: 11px;\r\n    margin-top: 15px;\r\n    width: 80%;\r\n    border: none;\r\n    border-radius: 4px;\r\n    box-sizing: border-box;\r\n  }\r\n`;\r\n\r\nconst Bariscard = styled.div\r\n`\r\n  content: \"\";\r\n  display: table;\r\n  align-items: center;\r\n  clear: both;\r\n  margin:15px 20px;\r\n`;\r\n\r\nconst Forestpage = ({pokemon = [],token, count}) =>(\r\n\r\n    <Wrapper>\r\n      <Navbar/>\r\n        <Styleddiv>\r\n            <h2>POKEMON FOREST <button onClick={fetchData}> reload </button> </h2>\r\n             <Bariscard> \r\n                {pokemon.map(pokemon =>{ return(\r\n\r\n                    <CardPoke namaPokemon={pokemon.name} urlPoK={pokemon.sprites.front_default} key={pokemon.name}/>\r\n                \r\n                )})}\r\n             </Bariscard>\r\n         </Styleddiv>\r\n     </Wrapper>\r\n   \r\n)\r\n\r\n\r\n  \r\n  export function getPokemon({ url }) {\r\n    return new Promise((resolve, reject) => {\r\n        fetch(url).then(res => res.json())\r\n            .then(data => {\r\n                resolve(data)\r\n            })\r\n    });\r\n}\r\n\r\n\r\n\r\n\r\nForestpage.getInitialProps = fetchData;\r\n\r\nasync function fetchData() {\r\n  const rand = Math.round(Math.random() * (964 - 1) + 1);\r\n  const initialURL = 'https://pokeapi.co/api/v2/pokemon?offset='+rand+'&limit=30';\r\n  \r\n  const fetchRes = await fetch(initialURL)\r\n  const res = await fetchRes.json()\r\n  \r\n  const data = res.results\r\n  const count = res.count \r\n\r\n  const token = Cookies.get('token')\r\n  console.log(token)\r\n  // if(token<0){\r\n  //   Router.push('/');\r\n  // }\r\n\r\n  let pokemonData = await Promise.all(data.map(async pokemon => {\r\n    let pokemonRecord = await getPokemon(pokemon)\r\n    return pokemonRecord\r\n  }))\r\n \r\n  return {\r\n    pokemon: pokemonData,\r\n    count, token\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Forestpage\r\n\r\n"]},"metadata":{},"sourceType":"module"}